//Time Complexity:  Best Case =O(n)  when array is sorted in ascending ; Worst Case: O(n^2) when array is sorted in decending order

//Space Complexity: O(1);



class Solution
{
public void insertionSort(int a[], int n)
  {
   
      for(int i=0;i<n-1;i++){
             
             int j=i+1;
             int temp= a[j];
          while(j>0){
           
              
              if(a[j-1]>temp)
              {
                  a[j]=a[j-1];
                  j--;
              }
              else{
                  a[j]=temp;
                  j=-1;
              }
          }
          
          if(j==0)
          a[0]=temp;
          
          
      }
  }
}
